<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1NTU4cHBw6nBwcO9wcHDvcHBw6jMz
        MzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADs7O3B4eHj039/f+SoqKv8qKir/0dHR8nJycsQ4ODhwAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPT09caamptfm5uf/1tbW/yoq
        Kv8qKir/z8/P/8/Pz/9wcHDtOTk5cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA/Pz9xq6ur2vf39//Pz8//1tbW/yoqKv8qKir/1tbW/9bW1v/39/f/cHBw7Tg4
        OHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw8PE91dXXt9/f3//f3
        9//W1tb/1tbW/yoqKv8qKir/1tbW/9bW1v/39/f/9/f3/3V1dfI1NTVPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAPT09IlxcXOX39/f/9/f3/8/Pz//W1tb/z8/P/yoqKv8qKir/z8/P/8/P
        z//Pz8//9/f3//f39/9xcXHwMTExIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVFRUz/f3
        9//39/f/z8/P/8/Pz//Pz8//xsbG/yoqKv8qKir/xsbG/8bGxv/Pz8//z8/P//f39//39/f/Tk5OzgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFRUVEoqKi0/f39//Pz8//z8/P/8/Pz//Gxsb/xsbG/yoq
        Kv8qKir/xsbG/8bGxv/Pz8//z8/P/8/Pz//39/f/c3NzxDMzM0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABycnLr4uLj+s/Pz//Pz8//xsbG/8bGxv+/v7//v7+//yoqKv8qKir/v7+//8bGxv/Gxsb/xsbG/9bW
        1v/W1tb/zMrH9Dw8PJEAAAAAAAAAAAAAAAAAAAAAAAAAAEVFRSJ2dnby3+Df/9bW1v/W1tb/xsbG/7+/
        v/+/v7//ubm5/yoqKv8qKir/v7+//7+/v//Gxsb/xsbG/8bGxv/W1tb/1tbW/3FxcfAwMDAiAAAAAAAA
        AAAAAAAAAAAAAHNzc9zW1tb/1tbW/9bW1v/Gxsb/xsbG/7+/v/+/v7//v7+//yoqKv8qKir/v7+//7+/
        v/+/v7//v7+//8bGxv/Gxsb/1tbW/4eHh9g3NzdaAAAAAAAAAAAAAAAAAAAAAHJycuPR0dHz1tbW/9bW
        1v/Gxsb/v7+//7+/v/+srKz/rKys/yoqKv8qKir/rKys/6ysrP+/v7//v7+//8bGxv/Gxsb/1tbW/9bW
        1v87Ozt7AAAAAAAAAAAAAAAAAAAAAHJycujn5eT71tbW/8/Pz//Gxsb/v7+//7+/v/+srKz/Kioq/yoq
        Kv8qKir/Kioq/6ysrP+srKz/v7+//8bGxv/Pz8//1tbW/9DT0/twcHDoAAAAAAAAAAAAAAAAAAAAAHJy
        cu8qKir/Kioq/yoqKv8qKir/Kioq/yoqKv8qKir/Kioq/yoqKv8qKir/Kioq/yoqKv8qKir/Kioq/yoq
        Kv8qKir/Kioq/yoqKv9wcHDvAAAAAAAAAAAAAAAAAAAAAHJycu8qKir/Kioq/yoqKv8qKir/Kioq/yoq
        Kv8qKir/Kioq/yoqKv8qKir/Kioq/yoqKv8qKir/Kioq/yoqKv8qKir/Kioq/yoqKv9wcHDvAAAAAAAA
        AAAAAAAAAAAAAHJycu/y8vL/1tbW/8/Pz//Gxsb/v7+//6ysrP+srKz/Kioq/yoqKv8qKir/Kioq/6ys
        rP+srKz/v7+//8/Pz//Pz8//1tbW/9bW1v9wcHDvAAAAAAAAAAAAAAAAAAAAAHJycu/y8fH/1tbW/9bW
        1v/Pz8//xsbG/7+/v/+/v7//rKys/yoqKv8qKir/rKys/7+/v/+/v7//v7+//8/Pz//Pz8//1tbW/9zh
        4f9wcHDvAAAAAAAAAAAAAAAAAAAAAHNzc+/w7+//z8/P/8/Pz//Pz8//z8/P/8bGxv+/v7//v7+//yoq
        Kv8qKir/rKys/8bGxv/Dw8P/z8/P/8/Pz//Pz8//1tbW/9bb3P9wcHDvAAAAAAAAAAAAAAAAAAAAAHNz
        c+/39/f/9/f3//f39//Pz8//z8/P/8/Pz//Pz8//xsbG/yoqKv8qKir/v7+//7+/v//Pz8//z8/P/8/P
        z//39/f/9/f3/9na2v1wcHDvAAAAAAAAAAAAAAAAAAAAAFlZWXt1dXXws7Oz1vf39//39/f/z8/P/8/P
        z//Pz8//z8/P/yoqKv8qKir/z8/P/8/Pz//Pz8//z8/P//f39//39/f/jY2NzXFxce45OTl7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVFRUOFhYWHtiYmLl9/f3//f39//39/f/1tbW/yoqKv8qKir/1tbW/8/P
        z//39/f/9/f3/3JycvBAQEB7OTk5OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABPT08WVFRUhnZ2duv39/f/5t3b/yoqKv8qKir/z8/P//f39/9/f3/EUFBQzjo6OhYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE9PT0NdXV3f4uHh9yoq
        Kv8qKir/z8/P7nNzc+5AQEA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKSkoiUlJShnFxce9SUlKzTExMhkFBQSIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gf8A/wD/AP4AfwD8AD8A+AAfAPAADwDwAA8A4AAHAOAA
        BwDAAAMAwAADAMAAAwDAAAMAwAADAMAAAwDAAAMAwAADAMAAAwDAAAMAwAADAPAADwD8AD8A/wD/AP+B
        /wA=
</value>
  </data>
</root>